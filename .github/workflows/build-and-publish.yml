name: Build and publish (NuGet)

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths-ignore:
      - 'WebLibs/**'
      - '.github/workflows/**'
      - '!.github/workflows/build-and-publish.yml'

env:
  SDK_VERSION: 8.0.x
  PACKAGE_1: GDL.IDAS.Crypto
  PACKAGE_1_FULL: Gandalan.IDAS.Crypto
  PACKAGE_2: GDL.IDAS.Logging
  PACKAGE_2_FULL: Gandalan.IDAS.Logging
  PACKAGE_3: GDL.IDAS.WebApi.Client
  PACKAGE_3_FULL: Gandalan.IDAS.WebApi.Client
  PACKAGE_4: GDL.IDAS.WebApi.Client.Wpf
  PACKAGE_4_FULL: Gandalan.IDAS.WebApi.Client.Wpf
  PACKAGE_5: GDL.IDAS.Contracts
  PACKAGE_5_FULL: Gandalan.IDAS.Contracts
  BUILD_CONFIG: Release
  OUTPUT_DIR: ./GDLPackages
  RELEASE_NAME: _will_be_set_in_steps_
  COMMON_PACK_PARAMS: _will_be_set_in_steps_

jobs:
  build-and-publish-nuget:
    if: github.repository_owner == 'gandalan'
    runs-on: ubuntu-22.04 # ubuntu-latest has issue with nuget pack command (nuget: 2: mono: not found)

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 50

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2
    - name: Set env.RELEASE_NAME
      run: echo "RELEASE_NAME=$(date +'%-Y.%-m.%-d').$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
    - name: Setup .NET Core SDK ${{ env.SDK_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.SDK_VERSION }}
    - name: Run UpdateVersionInfo.ps1 with ${{ env.RELEASE_NAME }}
      shell: pwsh
      run: .\UpdateVersionInfo.ps1 ${{ env.RELEASE_NAME }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration ${{ env.BUILD_CONFIG }} --no-restore -p:Version=${{ env.RELEASE_NAME }}
    - name: Set env.COMMON_PACK_PARAMS
      run: echo "COMMON_PACK_PARAMS=-NonInteractive -Verbosity Detailed -OutputDirectory ${{ env.OUTPUT_DIR }} -Symbols -SymbolPackageFormat snupkg" >> $GITHUB_ENV
    - name: Create package ${{ env.PACKAGE_1 }}
      run: nuget pack ${{ env.PACKAGE_1_FULL }}/${{ env.PACKAGE_1 }}.nuspec ${{ env.COMMON_PACK_PARAMS }}
    - name: Create package ${{ env.PACKAGE_2 }}
      run: nuget pack ${{ env.PACKAGE_2_FULL }}/${{ env.PACKAGE_2 }}.nuspec ${{ env.COMMON_PACK_PARAMS }}
    - name: Create package ${{ env.PACKAGE_3 }}
      run: nuget pack ${{ env.PACKAGE_3_FULL }}/${{ env.PACKAGE_3 }}.nuspec ${{ env.COMMON_PACK_PARAMS }}
    - name: Create package ${{ env.PACKAGE_4 }}
      run: nuget pack ${{ env.PACKAGE_4_FULL }}/${{ env.PACKAGE_4 }}.nuspec ${{ env.COMMON_PACK_PARAMS }}
    - name: Create package ${{ env.PACKAGE_5 }}
      run: nuget pack ${{ env.PACKAGE_5_FULL }}/${{ env.PACKAGE_5 }}.nuspec ${{ env.COMMON_PACK_PARAMS }}
    - name: Push packages
      run: dotnet nuget push "${{ env.OUTPUT_DIR }}/*.nupkg" -k ${NUGET_TOKEN} #--skip-duplicate
      env:
        NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
    - name: Create tag
      uses: rickstaa/action-create-tag@v1
      with:
        tag: IDAS.Client.Libs-Release_${{ env.RELEASE_NAME }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create release with changelog and assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release create "IDAS.Client.Libs-Release_${{ env.RELEASE_NAME }}" --generate-notes --prerelease ${{ env.OUTPUT_DIR }}/*.nupkg ${{ env.OUTPUT_DIR }}/*.snupkg
