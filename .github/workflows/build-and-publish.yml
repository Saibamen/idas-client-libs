name: Build and publish

on:
  push:
    branches: [ master ]
  pull_request: # for test only
    branches: [ master ]

env:
  SDK_VERSION: 6.0.x
  PACKAGE_1: Gandalan.IDAS.Crypto
  PACKAGE_2: Gandalan.IDAS.Logging
  PACKAGE_3: Gandalan.IDAS.WebApi.Client
  PACKAGE_4: Gandalan.IDAS.WebApi.Client.Wpf

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set release_name
      id: set_release_name
      run: echo "::set-output name=release_name::$(date +'%-Y.%-m.%-d').$GITHUB_RUN_NUMBER"
    - name: Setup .NET Core SDK ${{ env.SDK_VERSION }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.SDK_VERSION }}
    - name: Run UpdateVersionInfo.ps1 with ${{ steps.set_release_name.outputs.release_name }}
      shell: pwsh
      run: .\UpdateVersionInfo.ps1 ${{ steps.set_release_name.outputs.release_name }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Create package ${{ env.PACKAGE_1 }}
      run: dotnet pack --configuration Release **/${{ env.PACKAGE_1 }}.csproj
    - name: Create package ${{ env.PACKAGE_2 }}
      run: dotnet pack --configuration Release **/${{ env.PACKAGE_2 }}.csproj
    - name: Create package ${{ env.PACKAGE_3 }}
      run: dotnet pack --configuration Release **/${{ env.PACKAGE_3 }}.csproj
    - name: Create package ${{ env.PACKAGE_4 }}
      run: dotnet pack --configuration Release **/${{ env.PACKAGE_4 }}.csproj
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: IDAS.Client.Libs-Release_${{ steps.set_release_name.outputs.release_name }}
        release_name: IDAS.Client.Libs-Release_${{ steps.set_release_name.outputs.release_name }}
        prerelease: true
    - name: Upload Assets to Release with a wildcard
      uses: csexton/release-asset-action@v2
      with:
        pattern: "**/*.nupkg"
        github-token: ${{ secrets.GITHUB_TOKEN }}
        release-url: ${{ steps.create_release.outputs.upload_url }}
    - name: Build Changelog
      id: build_changelog
      uses: mikepenz/release-changelog-builder-action@v3.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Push packages
      run: dotnet nuget push "**/*.nupkg"
