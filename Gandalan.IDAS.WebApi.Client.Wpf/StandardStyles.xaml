<!-- Eingabe-Raster -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ctl="clr-namespace:Gandalan.IBOS3.Controls" >

    <ctl:BoolInvertConverter x:Key="InvertBool" />
    <BooleanToVisibilityConverter x:Key="BoolToVis" />
    
    <!--<util:BindingProxy x:Key="proxy" Data="{Binding}" />-->
    <Style TargetType="{x:Type Thumb}" x:Key="ThumbStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Width="1" Stroke="Transparent" Cursor="SizeWE"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Padding" Value="2"/>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="HorizontalGridLinesBrush" Value="Silver" />
        <Setter Property="BorderBrush" Value="Silver" />
    </Style>

    <ResourceDictionary x:Key="GdlMenubar">
        <Style TargetType="Border">
            <Setter Property="Background" Value="#E1E1E1" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#A4A4A4" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="5,15" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="103" />
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Padding" Value="10" />
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style x:Key="ContextButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Height" Value="30" />
            <Setter Property="Width" Value="30" />
            <Setter Property="Margin" Value="20,15" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                </BooleanAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </ResourceDictionary>

    <ResourceDictionary x:Key="GdlSubMenubar">
        <Style TargetType="Border">
            <Setter Property="Background" Value="#F5F5F5" />
        </Style>
        <Style TargetType="TabControl">
            <Style.Resources>
                <Style TargetType="Border" >
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="TabItem" x:Key="MenuTabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <StackPanel Margin="20,5,5,0" Orientation="Vertical" Background="Transparent">
                            <Label Content="{Binding Path=Header, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Margin="0,0,0,0" />
                            <Canvas Name="Panel" Height="10" Background="#76B729" Margin="0,0,0,13.5"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="#76B729" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ResourceDictionary>

    <ResourceDictionary x:Key="GdlTabsWithContent">
        <Style TargetType="Border">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Padding" Value="15" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style TargetType="TabItem" x:Key="MenuTabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <StackPanel Margin="20,5,5,0" Orientation="Vertical" Background="Transparent">
                            <Label Content="{Binding Path=Header, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Margin="0,0,0,0" />
                            <Canvas Name="Panel" Height="10" Background="#76B729" Margin="0,0,0,13.5"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="#76B729" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ResourceDictionary>

    <ResourceDictionary x:Key="GDLDataGrid">
        <Style TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" Background="#A4A4A4" Grid.ColumnSpan="2"/>
                            <ContentPresenter Margin="15,5,15,5" VerticalAlignment="Center"/>
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M 0,0 L 1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5, 0.4"/>
                            <Rectangle Width="1" Fill="#EEEEEE" HorizontalAlignment="Right" Grid.ColumnSpan="2"/>
                            <Rectangle Width="1" Margin="0,0,1,0" Fill="#DDDDDD" HorizontalAlignment="Right" Grid.ColumnSpan="2"/>
                            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ThumbStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource ThumbStyle}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="DisplayIndex" Value="0">
                                <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="12,5,15,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ResourceDictionary>

    <!-- Toolbar -->
    <ResourceDictionary x:Key="GdlToolbar">
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="Silver"/>
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Width" Value="1" />
                    <Setter Property="Margin" Value="5,0,10,0"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
    </ResourceDictionary>

    <ResourceDictionary x:Key="GdlToolbarTabs">
        <Style TargetType="TabItem">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" Text="{TemplateBinding Content}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock FontWeight="Normal" Text="{TemplateBinding Content}"></TextBlock>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid Name="Panel" Background="White">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ResourceDictionary>
    
    <Style x:Key="GdlToolbarSearchbox" TargetType="TextBox">
    </Style>

    <Style x:Key="TextBoxWaterMarkStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="White" BorderBrush="#FF7D8683" BorderThickness="1"/>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                        <Label Margin="2,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center" Visibility="Collapsed" Foreground="Gray"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GdlToolbarSeparator" TargetType="Border">
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Margin" Value="5,0,10,0"/>
    </Style>

    <!-- Ueberschriften -->
    <ResourceDictionary x:Key="InputGrid">
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Padding" Value="5"></Setter>
        </Style>

        <Style TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        </Style>
        <Style TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        </Style>
        <Style TargetType="DatePicker">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Padding" Value="2"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5,5,10,5"></Setter>
            <Setter Property="Padding" Value="2"></Setter>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="5,5,10,5"></Setter>
            <Setter Property="Padding" Value="2"></Setter>
        </Style>
        <Style TargetType="ListBox">
            <Setter Property="Margin" Value="5"></Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Padding" Value="5"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="Padding" Value="5"/>
        </Style>
    </ResourceDictionary>

    <ctl:BoolInvertConverter x:Key="InvertBoolDoe" />
    
    <ctl:AngleToPointConverter x:Key="prConverter"/>
    <ctl:AngleToIsLargeConverter x:Key="isLargeConverter"/>
    
    <Style TargetType="ctl:CircularProgressBar">
        <Setter Property="Value" Value="10"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="StrokeThickness" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctl:CircularProgressBar">
                    <Canvas Width="100" Height="100">
                        <Ellipse Width="100" Height="100" Stroke="LightGray" StrokeThickness="1"/>
                        <Path Stroke="{TemplateBinding Background}" StrokeThickness="{TemplateBinding StrokeThickness}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure x:Name="fig" StartPoint="50,0">
                                        <ArcSegment RotationAngle="0" SweepDirection="Clockwise"
                                                        Size="50,50"
                                                        Point="{Binding Path=Angle, Converter={StaticResource prConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}"
                                                        IsLargeArc="{Binding Path=Angle, Converter={StaticResource isLargeConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}"
                                                        >
                                        </ArcSegment>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Border Width="100" Height="100">
                            <TextBlock Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"
                                Text="{Binding Path=Value, StringFormat={}{0}%, RelativeSource={RelativeSource TemplatedParent}}"
                                FontSize="{TemplateBinding FontSize}" />
                        </Border>
                    </Canvas>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
    